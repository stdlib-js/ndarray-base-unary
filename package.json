{
  "name": "@stdlib/ndarray-base-unary",
  "version": "0.0.6",
  "description": "Apply a unary callback to elements in a input ndarray and assign results to elements in an output ndarray.",
  "license": "Apache-2.0",
  "author": {
    "name": "The Stdlib Authors",
    "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
  },
  "contributors": [
    {
      "name": "The Stdlib Authors",
      "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
    }
  ],
  "main": "./lib",
  "directories": {
    "benchmark": "./benchmark",
    "doc": "./docs",
    "example": "./examples",
    "include": "./include",
    "lib": "./lib",
    "scripts": "./scripts",
    "src": "./src",
    "test": "./test"
  },
  "types": "./docs/types",
  "scripts": {
    "test": "make test",
    "test-cov": "make test-cov",
    "examples": "make examples",
    "benchmark": "make benchmark"
  },
  "homepage": "https://stdlib.io",
  "repository": {
    "type": "git",
    "url": "git://github.com/stdlib-js/ndarray-base-unary.git"
  },
  "bugs": {
    "url": "https://github.com/stdlib-js/stdlib/issues"
  },
  "dependencies": {
    "@stdlib/array-base-accessor-getter": "^0.0.x",
    "@stdlib/array-base-accessor-setter": "^0.0.x",
    "@stdlib/array-base-assert-is-accessor-array": "^0.0.x",
    "@stdlib/array-base-getter": "^0.0.x",
    "@stdlib/array-base-setter": "^0.0.x",
    "@stdlib/complex-float32": "^0.0.x",
    "@stdlib/complex-float64": "^0.0.x",
    "@stdlib/ndarray-base-bytes-per-element": "^0.0.x",
    "@stdlib/ndarray-base-iteration-order": "^0.0.x",
    "@stdlib/ndarray-base-minmax-view-buffer-index": "^0.0.x",
    "@stdlib/ndarray-base-numel": "^0.0.x",
    "@stdlib/ndarray-base-unary-loop-interchange-order": "^0.0.x",
    "@stdlib/ndarray-base-unary-tiling-block-size": "^0.0.x",
    "@stdlib/ndarray-base-vind2bind": "^0.0.x",
    "@stdlib/ndarray-ctor": "^0.0.x",
    "@stdlib/ndarray-index-modes": "^0.0.x",
    "@stdlib/ndarray-orders": "^0.0.x",
    "@stdlib/types": "^0.0.x",
    "@stdlib/utils-library-manifest": "^0.0.x"
  },
  "devDependencies": {
    "@stdlib/array-filled": "^0.0.x",
    "@stdlib/array-filled-by": "^0.0.x",
    "@stdlib/array-typed-complex-ctors": "^0.0.x",
    "@stdlib/bench": "^0.0.x",
    "@stdlib/blas-base-gscal": "^0.0.x",
    "@stdlib/fs-read-dir": "^0.0.x",
    "@stdlib/fs-read-file": "^0.0.x",
    "@stdlib/fs-read-json": "^0.0.x",
    "@stdlib/fs-unlink": "^0.0.x",
    "@stdlib/fs-write-file": "^0.0.x",
    "@stdlib/math-base-assert-is-nan": "^0.0.x",
    "@stdlib/math-base-special-abs": "^0.0.x",
    "@stdlib/math-base-special-cbrt": "^0.0.x",
    "@stdlib/math-base-special-floor": "^0.0.x",
    "@stdlib/math-base-special-identity": "^0.0.x",
    "@stdlib/math-base-special-pow": "^0.0.x",
    "@stdlib/math-base-special-round": "^0.0.x",
    "@stdlib/math-base-special-sqrt": "^0.0.x",
    "@stdlib/ndarray-base-char2dtype": "^0.0.x",
    "@stdlib/ndarray-base-dtype-char": "^0.0.x",
    "@stdlib/ndarray-base-dtype-desc": "^0.0.x",
    "@stdlib/ndarray-base-dtype2c": "^0.0.x",
    "@stdlib/ndarray-base-shape2strides": "^0.0.x",
    "@stdlib/ndarray-base-to-array": "^0.0.x",
    "@stdlib/ndarray-dtypes": "^0.0.x",
    "@stdlib/ndarray-safe-casts": "^0.0.x",
    "@stdlib/random-base-discrete-uniform": "^0.0.x",
    "@stdlib/random-base-randu": "^0.0.x",
    "@stdlib/string-format": "^0.0.x",
    "@stdlib/string-replace": "^0.0.x",
    "@stdlib/string-substring-after": "^0.0.x",
    "@stdlib/string-substring-before": "^0.0.x",
    "@stdlib/string-uppercase": "^0.0.x",
    "@stdlib/time-current-year": "^0.0.x",
    "tape": "git+https://github.com/kgryte/tape.git#fix/globby",
    "istanbul": "^0.4.1",
    "tap-min": "2.x.x"
  },
  "engines": {
    "node": ">=0.10.0",
    "npm": ">2.7.0"
  },
  "os": [
    "aix",
    "darwin",
    "freebsd",
    "linux",
    "macos",
    "openbsd",
    "sunos",
    "win32",
    "windows"
  ],
  "keywords": [
    "stdlib",
    "base",
    "strided",
    "array",
    "ndarray",
    "unary",
    "apply",
    "foreach",
    "map",
    "transform"
  ],
  "__stdlib__": {},
  "funding": {
    "type": "patreon",
    "url": "https://www.patreon.com/athan"
  }
}
